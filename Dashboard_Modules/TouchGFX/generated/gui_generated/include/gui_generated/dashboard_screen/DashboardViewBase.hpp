/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DASHBOARDVIEWBASE_HPP
#define DASHBOARDVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/dashboard_screen/DashboardPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/SlideMenu.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/mixins/ClickListener.hpp>

class DashboardViewBase : public touchgfx::View<DashboardPresenter>
{
public:
    DashboardViewBase();
    virtual ~DashboardViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box background;
    touchgfx::Container batteryTemp;
    touchgfx::TextArea batteryTempLabel;
    touchgfx::BoxProgress batteryTempProgress;
    touchgfx::Container batterySOC;
    touchgfx::TextArea batterySOCLabel;
    touchgfx::BoxProgress batterySOCProgress;
    touchgfx::Container indicators;
    touchgfx::BoxWithBorder lvIndicator;
    touchgfx::BoxWithBorder hvIndicator;
    touchgfx::TextArea highVoltageLabel;
    touchgfx::TextArea lowVoltageLabel;
    touchgfx::Container speedometer;
    touchgfx::TextAreaWithOneWildcard center_text;
    touchgfx::TextArea centerTextUnits;
    touchgfx::Container motorTemperatures;
    touchgfx::TextArea motorTempLabel;
    touchgfx::BoxProgress frontRightMotorTempProgress;
    touchgfx::BoxProgress frontLeftMotorTempProgress;
    touchgfx::BoxProgress backRightMotorTempProgress;
    touchgfx::BoxProgress backLeftMotorTempProgress;
    touchgfx::SlideMenu optionsMenu;
    touchgfx::ToggleButton toggleButton;
    touchgfx::ClickListener< touchgfx::ButtonWithIcon > settingsBtn;

    /*
     * Wildcard Buffers
     */
    static const uint16_t CENTER_TEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar center_textBuffer[CENTER_TEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<DashboardViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // DASHBOARDVIEWBASE_HPP
